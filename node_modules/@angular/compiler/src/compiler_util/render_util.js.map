{"version":3,"file":"render_util.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/compiler_util/render_util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {SecurityContext} from '@angular/core';\n\nimport {isPresent} from '../facade/lang';\nimport {Identifiers, resolveIdentifier} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {BoundElementPropertyAst, PropertyBindingType} from '../template_parser/template_ast';\n\nimport {createEnumExpression} from './identifier_util';\n\nexport function writeToRenderer(\n    view: o.Expression, boundProp: BoundElementPropertyAst, renderElement: o.Expression,\n    renderValue: o.Expression, logBindingUpdate: boolean,\n    securityContextExpression?: o.Expression): o.Statement[] {\n  const updateStmts: o.Statement[] = [];\n  const renderer = view.prop('renderer');\n  renderValue = sanitizedValue(view, boundProp, renderValue, securityContextExpression);\n  switch (boundProp.type) {\n    case PropertyBindingType.Property:\n      if (logBindingUpdate) {\n        updateStmts.push(\n            o.importExpr(resolveIdentifier(Identifiers.setBindingDebugInfo))\n                .callFn([renderer, renderElement, o.literal(boundProp.name), renderValue])\n                .toStmt());\n      }\n      updateStmts.push(\n          renderer\n              .callMethod(\n                  'setElementProperty', [renderElement, o.literal(boundProp.name), renderValue])\n              .toStmt());\n      break;\n    case PropertyBindingType.Attribute:\n      renderValue =\n          renderValue.isBlank().conditional(o.NULL_EXPR, renderValue.callMethod('toString', []));\n      updateStmts.push(\n          renderer\n              .callMethod(\n                  'setElementAttribute', [renderElement, o.literal(boundProp.name), renderValue])\n              .toStmt());\n      break;\n    case PropertyBindingType.Class:\n      updateStmts.push(\n          renderer\n              .callMethod(\n                  'setElementClass', [renderElement, o.literal(boundProp.name), renderValue])\n              .toStmt());\n      break;\n    case PropertyBindingType.Style:\n      var strValue: o.Expression = renderValue.callMethod('toString', []);\n      if (isPresent(boundProp.unit)) {\n        strValue = strValue.plus(o.literal(boundProp.unit));\n      }\n\n      renderValue = renderValue.isBlank().conditional(o.NULL_EXPR, strValue);\n      updateStmts.push(\n          renderer\n              .callMethod(\n                  'setElementStyle', [renderElement, o.literal(boundProp.name), renderValue])\n              .toStmt());\n      break;\n    case PropertyBindingType.Animation:\n      throw new Error('Illegal state: Should not come here!');\n  }\n  return updateStmts;\n}\n\nfunction sanitizedValue(\n    view: o.Expression, boundProp: BoundElementPropertyAst, renderValue: o.Expression,\n    securityContextExpression?: o.Expression): o.Expression {\n  if (boundProp.securityContext === SecurityContext.NONE) {\n    return renderValue;  // No sanitization needed.\n  }\n  if (!boundProp.needsRuntimeSecurityContext) {\n    securityContextExpression =\n        createEnumExpression(Identifiers.SecurityContext, boundProp.securityContext);\n  }\n  if (!securityContextExpression) {\n    throw new Error(`internal error, no SecurityContext given ${boundProp.name}`);\n  }\n  let ctx = view.prop('viewUtils').prop('sanitizer');\n  let args = [securityContextExpression, renderValue];\n  return ctx.callMethod('sanitize', args);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}