"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var IgButton = (function () {
    function IgButton(_el, _renderer) {
        this._el = _el;
        this._renderer = _renderer;
        this._type = 'flat';
        this._cssClass = 'ig-button';
    }
    Object.defineProperty(IgButton.prototype, "type", {
        set: function (value) {
            this._type = value || this._type;
            this._renderer.setElementClass(this._el.nativeElement, this._cssClass + "--" + this._type, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgButton.prototype, "color", {
        set: function (value) {
            this._color = value || this._el.nativeElement.style.color;
            this._renderer.setElementStyle(this._el.nativeElement, 'color', this._color);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgButton.prototype, "background", {
        set: function (value) {
            this._backgroundColor = value || this._backgroundColor;
            this._renderer.setElementStyle(this._el.nativeElement, 'background', this._backgroundColor);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgButton.prototype, "disabled", {
        set: function (val) {
            this._renderer.setElementClass(this._el.nativeElement, this._cssClass + "--disabled", !!val);
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input('igButton'), 
        __metadata('design:type', String), 
        __metadata('design:paramtypes', [String])
    ], IgButton.prototype, "type", null);
    __decorate([
        core_1.Input('igButtonColor'), 
        __metadata('design:type', String), 
        __metadata('design:paramtypes', [String])
    ], IgButton.prototype, "color", null);
    __decorate([
        core_1.Input('igButtonBackground'), 
        __metadata('design:type', String), 
        __metadata('design:paramtypes', [String])
    ], IgButton.prototype, "background", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object), 
        __metadata('design:paramtypes', [Object])
    ], IgButton.prototype, "disabled", null);
    IgButton = __decorate([
        core_1.Directive({
            selector: '[igButton]',
            host: {
                'role': 'button'
            }
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer])
    ], IgButton);
    return IgButton;
}());
exports.IgButton = IgButton;
var ButtonModule = (function () {
    function ButtonModule() {
    }
    ButtonModule = __decorate([
        core_1.NgModule({
            declarations: [IgButton],
            exports: [IgButton]
        }), 
        __metadata('design:paramtypes', [])
    ], ButtonModule);
    return ButtonModule;
}());
exports.ButtonModule = ButtonModule;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1dHRvbi9idXR0b24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLHFCQUF5RSxlQUFlLENBQUMsQ0FBQTtBQVF6RjtJQU1JLGtCQUFvQixHQUFlLEVBQVUsU0FBbUI7UUFBNUMsUUFBRyxHQUFILEdBQUcsQ0FBWTtRQUFVLGNBQVMsR0FBVCxTQUFTLENBQVU7UUFMeEQsVUFBSyxHQUFXLE1BQU0sQ0FBQztRQUN2QixjQUFTLEdBQVcsV0FBVyxDQUFDO0lBSTJCLENBQUM7SUFFakQsc0JBQUksMEJBQUk7YUFBUixVQUFTLEtBQWE7WUFDckMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNqQyxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBSyxJQUFJLENBQUMsU0FBUyxVQUFLLElBQUksQ0FBQyxLQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDckcsQ0FBQzs7O09BQUE7SUFFdUIsc0JBQUksMkJBQUs7YUFBVCxVQUFVLEtBQWE7WUFDM0MsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztZQUMxRCxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2pGLENBQUM7OztPQUFBO0lBRTRCLHNCQUFJLGdDQUFVO2FBQWQsVUFBZ0IsS0FBYTtZQUN0RCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztZQUN2RCxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxZQUFZLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDaEcsQ0FBQzs7O09BQUE7SUFFUSxzQkFBSSw4QkFBUTthQUFaLFVBQWEsR0FBRztZQUNyQixJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBSyxJQUFJLENBQUMsU0FBUyxlQUFZLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pHLENBQUM7OztPQUFBO0lBakJEO1FBQUMsWUFBSyxDQUFDLFVBQVUsQ0FBQzs7O3dDQUFBO0lBS2xCO1FBQUMsWUFBSyxDQUFDLGVBQWUsQ0FBQzs7O3lDQUFBO0lBS3ZCO1FBQUMsWUFBSyxDQUFDLG9CQUFvQixDQUFDOzs7OENBQUE7SUFLNUI7UUFBQyxZQUFLLEVBQUU7Ozs0Q0FBQTtJQTdCWjtRQUFDLGdCQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsWUFBWTtZQUN0QixJQUFJLEVBQUU7Z0JBQ0YsTUFBTSxFQUFFLFFBQVE7YUFDbkI7U0FDSixDQUFDOztnQkFBQTtJQTJCRixlQUFDO0FBQUQsQ0ExQkEsQUEwQkMsSUFBQTtBQTFCWSxnQkFBUSxXQTBCcEIsQ0FBQTtBQU1EO0lBQUE7SUFBMkIsQ0FBQztJQUo1QjtRQUFDLGVBQVEsQ0FBQztZQUNOLFlBQVksRUFBRSxDQUFDLFFBQVEsQ0FBQztZQUN4QixPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUM7U0FDdEIsQ0FBQzs7b0JBQUE7SUFDeUIsbUJBQUM7QUFBRCxDQUEzQixBQUE0QixJQUFBO0FBQWYsb0JBQVksZUFBRyxDQUFBIiwiZmlsZSI6ImJ1dHRvbi9idXR0b24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0LCBSZW5kZXJlciwgTmdNb2R1bGUsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tpZ0J1dHRvbl0nLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ3JvbGUnOiAnYnV0dG9uJ1xuICAgIH1cbn0pXG5leHBvcnQgY2xhc3MgSWdCdXR0b24ge1xuICAgIHByaXZhdGUgX3R5cGU6IHN0cmluZyA9ICdmbGF0JztcbiAgICBwcml2YXRlIF9jc3NDbGFzczogc3RyaW5nID0gJ2lnLWJ1dHRvbic7XG4gICAgcHJpdmF0ZSBfY29sb3I6IHN0cmluZztcbiAgICBwcml2YXRlIF9iYWNrZ3JvdW5kQ29sb3I6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX2VsOiBFbGVtZW50UmVmLCBwcml2YXRlIF9yZW5kZXJlcjogUmVuZGVyZXIpIHt9XG5cbiAgICBASW5wdXQoJ2lnQnV0dG9uJykgc2V0IHR5cGUodmFsdWU6IHN0cmluZykge1xuICAgICAgICB0aGlzLl90eXBlID0gdmFsdWUgfHwgdGhpcy5fdHlwZTtcbiAgICAgICAgdGhpcy5fcmVuZGVyZXIuc2V0RWxlbWVudENsYXNzKHRoaXMuX2VsLm5hdGl2ZUVsZW1lbnQsIGAke3RoaXMuX2Nzc0NsYXNzfS0tJHt0aGlzLl90eXBlfWAsIHRydWUpO1xuICAgIH1cblxuICAgIEBJbnB1dCgnaWdCdXR0b25Db2xvcicpIHNldCBjb2xvcih2YWx1ZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuX2NvbG9yID0gdmFsdWUgfHwgdGhpcy5fZWwubmF0aXZlRWxlbWVudC5zdHlsZS5jb2xvcjtcbiAgICAgICAgdGhpcy5fcmVuZGVyZXIuc2V0RWxlbWVudFN0eWxlKHRoaXMuX2VsLm5hdGl2ZUVsZW1lbnQsICdjb2xvcicsIHRoaXMuX2NvbG9yKTtcbiAgICB9XG5cbiAgICBASW5wdXQoJ2lnQnV0dG9uQmFja2dyb3VuZCcpIHNldCBiYWNrZ3JvdW5kICh2YWx1ZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuX2JhY2tncm91bmRDb2xvciA9IHZhbHVlIHx8IHRoaXMuX2JhY2tncm91bmRDb2xvcjtcbiAgICAgICAgdGhpcy5fcmVuZGVyZXIuc2V0RWxlbWVudFN0eWxlKHRoaXMuX2VsLm5hdGl2ZUVsZW1lbnQsICdiYWNrZ3JvdW5kJywgdGhpcy5fYmFja2dyb3VuZENvbG9yKTtcbiAgICB9XG5cbiAgICBASW5wdXQoKSBzZXQgZGlzYWJsZWQodmFsKSB7XG4gICAgICAgIHRoaXMuX3JlbmRlcmVyLnNldEVsZW1lbnRDbGFzcyh0aGlzLl9lbC5uYXRpdmVFbGVtZW50LCBgJHt0aGlzLl9jc3NDbGFzc30tLWRpc2FibGVkYCwgISF2YWwpO1xuICAgIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgICBkZWNsYXJhdGlvbnM6IFtJZ0J1dHRvbl0sXG4gICAgZXhwb3J0czogW0lnQnV0dG9uXVxufSlcbmV4cG9ydCBjbGFzcyBCdXR0b25Nb2R1bGUge30iXX0=
