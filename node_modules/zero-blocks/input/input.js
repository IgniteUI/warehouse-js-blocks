"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var IgInput = (function () {
    function IgInput(el) {
        this.el = el;
    }
    IgInput.prototype.onFocus = function (event) {
        this.focused = true;
    };
    IgInput.prototype.onBlur = function (event) {
        this.focused = false;
    };
    Object.defineProperty(IgInput.prototype, "filled", {
        get: function () {
            var value = this.el.nativeElement.value;
            return value && (value !== '');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgInput.prototype, "placeholder", {
        get: function () {
            return this.el.nativeElement.getAttribute('placeholder') && !this.filled;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.HostListener('focus', ['$event']), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', [Object]), 
        __metadata('design:returntype', void 0)
    ], IgInput.prototype, "onFocus", null);
    __decorate([
        core_1.HostListener('blur', ['$event']), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', [Object]), 
        __metadata('design:returntype', void 0)
    ], IgInput.prototype, "onBlur", null);
    IgInput = __decorate([
        core_1.Directive({
            selector: '[igInput]',
            host: {
                '[class.ig-form-group__input]': 'true',
                '[class.ig-form-group__input--filled]': 'filled',
                '[class.ig-form-group__input--focused]': 'focused',
                '[class.ig-form-group__input--placeholder]': 'placeholder'
            }
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef])
    ], IgInput);
    return IgInput;
}());
exports.IgInput = IgInput;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlucHV0L2lucHV0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxxQkFJTyxlQUFlLENBQUMsQ0FBQTtBQVd2QjtJQUlJLGlCQUFzQixFQUFjO1FBQWQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtJQUFHLENBQUM7SUFHeEMseUJBQU8sR0FBUCxVQUFRLEtBQUs7UUFDVCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztJQUN4QixDQUFDO0lBR0Qsd0JBQU0sR0FBTixVQUFPLEtBQUs7UUFDUixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztJQUN6QixDQUFDO0lBRUQsc0JBQUksMkJBQU07YUFBVjtZQUNJLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQztZQUN4QyxNQUFNLENBQUMsS0FBSyxJQUFJLENBQUMsS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQ25DLENBQUM7OztPQUFBO0lBR0Qsc0JBQUksZ0NBQVc7YUFBZjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzdFLENBQUM7OztPQUFBO0lBbEJEO1FBQUMsbUJBQVksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQzs7OzswQ0FBQTtJQUtsQztRQUFDLG1CQUFZLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7Ozs7eUNBQUE7SUFwQnJDO1FBQUMsZ0JBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxXQUFXO1lBQ3JCLElBQUksRUFBRTtnQkFDRiw4QkFBOEIsRUFBRSxNQUFNO2dCQUN0QyxzQ0FBc0MsRUFBRSxRQUFRO2dCQUNoRCx1Q0FBdUMsRUFBRSxTQUFTO2dCQUNsRCwyQ0FBMkMsRUFBRSxhQUFhO2FBQzdEO1NBQ0osQ0FBQzs7ZUFBQTtJQTBCRixjQUFDO0FBQUQsQ0F6QkEsQUF5QkMsSUFBQTtBQXpCWSxlQUFPLFVBeUJuQixDQUFBIiwiZmlsZSI6ImlucHV0L2lucHV0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBEaXJlY3RpdmUsXG4gICAgRWxlbWVudFJlZixcbiAgICBIb3N0TGlzdGVuZXJcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbaWdJbnB1dF0nLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tjbGFzcy5pZy1mb3JtLWdyb3VwX19pbnB1dF0nOiAndHJ1ZScsXG4gICAgICAgICdbY2xhc3MuaWctZm9ybS1ncm91cF9faW5wdXQtLWZpbGxlZF0nOiAnZmlsbGVkJyxcbiAgICAgICAgJ1tjbGFzcy5pZy1mb3JtLWdyb3VwX19pbnB1dC0tZm9jdXNlZF0nOiAnZm9jdXNlZCcsXG4gICAgICAgICdbY2xhc3MuaWctZm9ybS1ncm91cF9faW5wdXQtLXBsYWNlaG9sZGVyXSc6ICdwbGFjZWhvbGRlcidcbiAgICB9XG59KVxuZXhwb3J0IGNsYXNzIElnSW5wdXQge1xuXG4gICAgZm9jdXNlZDogYm9vbGVhbjtcblxuICAgIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBlbDogRWxlbWVudFJlZikge31cblxuICAgIEBIb3N0TGlzdGVuZXIoJ2ZvY3VzJywgWyckZXZlbnQnXSlcbiAgICBvbkZvY3VzKGV2ZW50KSB7XG4gICAgICAgIHRoaXMuZm9jdXNlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignYmx1cicsIFsnJGV2ZW50J10pXG4gICAgb25CbHVyKGV2ZW50KSB7XG4gICAgICAgIHRoaXMuZm9jdXNlZCA9IGZhbHNlO1xuICAgIH1cblxuICAgIGdldCBmaWxsZWQoKSB7XG4gICAgICAgIGxldCB2YWx1ZSA9IHRoaXMuZWwubmF0aXZlRWxlbWVudC52YWx1ZTtcbiAgICAgICAgcmV0dXJuIHZhbHVlICYmICh2YWx1ZSAhPT0gJycpO1xuICAgIH1cblxuXG4gICAgZ2V0IHBsYWNlaG9sZGVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbC5uYXRpdmVFbGVtZW50LmdldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInKSAmJiAhdGhpcy5maWxsZWQ7XG4gICAgfVxufVxuIl19
