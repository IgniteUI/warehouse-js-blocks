import { PipeTransform, EventEmitter, ElementRef, Renderer, OnChanges, SimpleChanges } from "@angular/core";
export declare class FilterDirective implements OnChanges {
    private element;
    filtering: EventEmitter<{}>;
    filtered: EventEmitter<{}>;
    filterOptions: FilterOptions;
    constructor(element: ElementRef, renderer: Renderer);
    ngOnChanges(changes: SimpleChanges): void;
    private filter();
}
export declare class FilterPipe implements PipeTransform {
    transform(items: Array<any>, options: FilterOptions): any[];
}
export declare class FilterOptions {
    inputValue: string;
    key: string;
    items: Array<any>;
    get_value(item: any, key: string): string;
    formatter(valueToTest: string): string;
    matchFn(valueToTest: string, inputValue: string): boolean;
    metConditionFn(item: any): void;
    overdueConditionFn(item: any): void;
}
export declare class FilterModule {
}
