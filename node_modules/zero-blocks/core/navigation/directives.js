"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var nav_service_1 = require('./nav-service');
// TODO: (style) NavToggleDirective, igNavToggle selector ?
var NavigationToggle = (function () {
    function NavigationToggle(nav) {
        this.state = nav;
    }
    NavigationToggle.prototype.toggleNavigationDrawer = function () {
        this.state.toggle(this.target, true);
    };
    __decorate([
        core_1.Input("ig-nav-toggle"), 
        __metadata('design:type', Object)
    ], NavigationToggle.prototype, "target", void 0);
    __decorate([
        core_1.HostListener('click'), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', []), 
        __metadata('design:returntype', void 0)
    ], NavigationToggle.prototype, "toggleNavigationDrawer", null);
    NavigationToggle = __decorate([
        core_1.Directive({ selector: '[ig-nav-toggle]' }), 
        __metadata('design:paramtypes', [nav_service_1.NavigationService])
    ], NavigationToggle);
    return NavigationToggle;
}());
exports.NavigationToggle = NavigationToggle;
// TODO: (style) NavCloseDirective, igNavClose selector ?
var NavigationClose = (function () {
    function NavigationClose(nav) {
        this.state = nav;
    }
    NavigationClose.prototype.closeNavigationDrawer = function () {
        this.state.close(this.target, true);
    };
    __decorate([
        core_1.Input("ig-nav-close"), 
        __metadata('design:type', Object)
    ], NavigationClose.prototype, "target", void 0);
    __decorate([
        core_1.HostListener('click'), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', []), 
        __metadata('design:returntype', void 0)
    ], NavigationClose.prototype, "closeNavigationDrawer", null);
    NavigationClose = __decorate([
        core_1.Directive({ selector: '[ig-nav-close]' }), 
        __metadata('design:paramtypes', [nav_service_1.NavigationService])
    ], NavigationClose);
    return NavigationClose;
}());
exports.NavigationClose = NavigationClose;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvbmF2aWdhdGlvbi9kaXJlY3RpdmVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxxQkFBNkMsZUFBZSxDQUFDLENBQUE7QUFDN0QsNEJBQWdDLGVBQWUsQ0FBQyxDQUFBO0FBRWhELDJEQUEyRDtBQUUzRDtJQUtJLDBCQUFZLEdBQXNCO1FBQzlCLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDO0lBQ3JCLENBQUM7SUFFc0IsaURBQXNCLEdBQXRCO1FBQ25CLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQVJEO1FBQUMsWUFBSyxDQUFDLGVBQWUsQ0FBQzs7b0RBQUE7SUFNdkI7UUFBQyxtQkFBWSxDQUFDLE9BQU8sQ0FBQzs7OztrRUFBQTtJQVYxQjtRQUFDLGdCQUFTLENBQUMsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQzs7d0JBQUE7SUFhM0MsdUJBQUM7QUFBRCxDQVpBLEFBWUMsSUFBQTtBQVpZLHdCQUFnQixtQkFZNUIsQ0FBQTtBQUVELHlEQUF5RDtBQUV6RDtJQUtJLHlCQUFZLEdBQXNCO1FBQzlCLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDO0lBQ3JCLENBQUM7SUFFc0IsK0NBQXFCLEdBQXJCO1FBQ25CLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQVJEO1FBQUMsWUFBSyxDQUFDLGNBQWMsQ0FBQzs7bURBQUE7SUFNdEI7UUFBQyxtQkFBWSxDQUFDLE9BQU8sQ0FBQzs7OztnRUFBQTtJQVYxQjtRQUFDLGdCQUFTLENBQUMsRUFBRSxRQUFRLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQzs7dUJBQUE7SUFhMUMsc0JBQUM7QUFBRCxDQVpBLEFBWUMsSUFBQTtBQVpZLHVCQUFlLGtCQVkzQixDQUFBIiwiZmlsZSI6ImNvcmUvbmF2aWdhdGlvbi9kaXJlY3RpdmVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEhvc3RMaXN0ZW5lciwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtOYXZpZ2F0aW9uU2VydmljZX0gZnJvbSAnLi9uYXYtc2VydmljZSc7XG5cbi8vIFRPRE86IChzdHlsZSkgTmF2VG9nZ2xlRGlyZWN0aXZlLCBpZ05hdlRvZ2dsZSBzZWxlY3RvciA/XG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbaWctbmF2LXRvZ2dsZV0nIH0pXG5leHBvcnQgY2xhc3MgTmF2aWdhdGlvblRvZ2dsZSB7XG4gICAgc3RhdGU6IE5hdmlnYXRpb25TZXJ2aWNlO1xuICAgIFxuICAgIEBJbnB1dChcImlnLW5hdi10b2dnbGVcIikgcHJpdmF0ZSB0YXJnZXQ7XG5cbiAgICBjb25zdHJ1Y3RvcihuYXY6IE5hdmlnYXRpb25TZXJ2aWNlKSB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBuYXY7XG4gICAgfVxuICAgIFxuICAgIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJykgdG9nZ2xlTmF2aWdhdGlvbkRyYXdlciAoKSB7XG4gICAgICAgIHRoaXMuc3RhdGUudG9nZ2xlKHRoaXMudGFyZ2V0LCB0cnVlKTtcbiAgICB9XG59XG5cbi8vIFRPRE86IChzdHlsZSkgTmF2Q2xvc2VEaXJlY3RpdmUsIGlnTmF2Q2xvc2Ugc2VsZWN0b3IgP1xuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW2lnLW5hdi1jbG9zZV0nIH0pXG5leHBvcnQgY2xhc3MgTmF2aWdhdGlvbkNsb3NlIHtcbiAgICBzdGF0ZTogTmF2aWdhdGlvblNlcnZpY2U7XG4gICAgXG4gICAgQElucHV0KFwiaWctbmF2LWNsb3NlXCIpIHByaXZhdGUgdGFyZ2V0O1xuICAgIFxuICAgIGNvbnN0cnVjdG9yKG5hdjogTmF2aWdhdGlvblNlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5hdjtcbiAgICB9XG4gICAgXG4gICAgQEhvc3RMaXN0ZW5lcignY2xpY2snKSBjbG9zZU5hdmlnYXRpb25EcmF3ZXIgKCkge1xuICAgICAgICB0aGlzLnN0YXRlLmNsb3NlKHRoaXMudGFyZ2V0LCB0cnVlKTtcbiAgICB9XG59Il19
