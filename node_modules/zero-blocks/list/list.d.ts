import { Renderer, OnInit, OnDestroy, ElementRef } from '@angular/core';
export interface IListChild {
    index: number;
}
export declare class List {
    private element;
    private _innerStyle;
    children: IListChild[];
    readonly items: IListChild[];
    readonly headers: IListChild[];
    constructor(element: ElementRef);
    removeChild(index: number): void;
    addChild(child: IListChild): void;
}
export declare class ListHeader implements OnInit, IListChild {
    private list;
    element: ElementRef;
    private _innerStyle;
    readonly index: number;
    constructor(list: List, element: ElementRef);
    ngOnInit(): void;
}
export declare class ListItem implements OnInit, OnDestroy, IListChild {
    private list;
    element: ElementRef;
    private _renderer;
    wrapper: ElementRef;
    private _VISIBLE_AREA_ON_FULL_PAN;
    private _FRACTION_OF_WIDTH_TO_TRIGGER_GRIP;
    private _initialLeft;
    private _innerStyle;
    hidden: boolean;
    readonly index: number;
    readonly width: any;
    left: number;
    readonly maxLeft: number;
    href: string;
    options: Array<Object>;
    constructor(list: List, element: ElementRef, _renderer: Renderer);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private _addEventListeners();
    private cancelEvent(ev);
    private panStart(ev);
    private panMove(ev);
    private panEnd(ev);
    private magneticGrip();
    private rightMagneticGrip();
    private leftMagneticGrip();
}
export declare class ListModule {
}
